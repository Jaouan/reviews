declare module "lucene-query-parser" {
  /**
   * Represents a node in the syntax tree generated by the parser.
   */
  export interface LuceneNode {
    field?: string; // The field on which the search is performed.
    term?: string; // The search value or term.
    operator?: string; // Operator used (":", ">", "<", ">=", "<=").
    left?: LuceneNode; // Left sub-node for combinations (AND, OR).
    right?: LuceneNode; // Right sub-node for combinations (AND, OR).
    prefix?: string; // Possible prefixes (e.g., "+" or "-").
    boost?: number; // Weight assigned to this node in a query.
  }

  /**
   * Parses a Lucene query and returns its syntax tree.
   * @param query - The Lucene query string to parse.
   * @returns A node representing the syntax tree.
   * @throws An error if the query is invalid.
   */
  export function parse(query: string): LuceneNode;

  /**
   * Defines a rule for special characters.
   * @param character - The special character to configure.
   * @param escaped - Indicates whether the character should be escaped.
   */
  export function addSpecialCharacter(
    character: string,
    escaped: boolean
  ): void;
}
